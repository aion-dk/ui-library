version: 2.1
orbs:
  node: circleci/node@7.1.0
  docker: assemblyvoting/docker@1.6.3
executors:
  playwright:
    docker:
      - image: mcr.microsoft.com/playwright:v1.51.1-noble
  node22:
    docker:
      - image: cimg/node:22.14
  ruby-node:
    docker:
      - image: cimg/ruby:3.2-node

filters:
  - &always
    tags:
      only: /.*/

jobs:
  playwright:
    executor:
      name: playwright
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-
      - node/install-yarn
      - run: yarn install --immutable
      - save_cache:
          paths:
            - ./node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn run build-storybook
      - run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
              "npx http-server storybook-static --port 6006 --silent" \
              "npx wait-on tcp:127.0.0.1:6006 && yarn test-storybook"
  lint_test_build:
    executor:
      name: node22
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-
      - node/install-yarn
      - run: yarn install --immutable
      - save_cache:
          paths:
            - ./node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn run lint
      - run: yarn run test-coverage
      - run: yarn run build
      - run:
          name: Copy extra files to ./dist
          command: |
            cp /home/circleci/project/README.md ./dist/README.md
            cp /home/circleci/project/package.json ./dist/package.json
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - dist
  publish:
    executor:
      name: node22
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Move files
          command: |
            mv /tmp/workspace/dist ./
      - run:
          name: List files recursive
          command: |
            ls -R ./
      - run:
          name: Set npm access token
          command: |
            npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
      - run:
          name: Publish to NPM
          command: |
            cd dist
            package_version=$(jq -r '.version' package.json)
            if echo "${package_version}" | grep -E "alpha|beta" > /dev/null; then
              prerelease=$(echo "${package_version}" | grep -E -o "alpha|beta")
              echo "Publishing prerelease with tag ${prerelease} to NPM"
                npm publish --tag ${prerelease}
            else
              echo "Publishing release with to NPM"
                npm publish
            fi
workflows:
  build_and_deploy:
    jobs:
      - lint_test_build:
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/
      - docker/license-checker:
          context:
            - "GIT"
          filters: *always
          prep-yarn: true
          prep-bundle: false
          executor: ruby-node
      - playwright:
          filters: *always
      - publish:
          requires:
            - lint_test_build
            - docker/license-checker
            - playwright
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
